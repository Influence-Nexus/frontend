import React, { useState } from 'react';

function GameInfo() {
  const [currentPage, setCurrentPage] = useState(1);

  const handleNextPage = () => {
    setCurrentPage((prevPage) => prevPage + 1);
  };

  const handlePrevPage = () => {
    setCurrentPage((prevPage) => prevPage - 1);
  };

  const totalPages = 4; // Total number of pages

  return (
    <div>
      {currentPage === 1 && (
        <div>
          <h1>Meet the Equilibrium!</h1>
          <h2>ВСТРЕЧАЙТЕ ЭКВИЛИБРИУМ!</h2>
          <h3>Цель игры</h3>
          <p>Набрать как можно больше очков из 100 возможных за одну игру. Это означает уровень изменения ситуации в лучшую сторону благодаря Вашей стратегии действий.</p>
          <p>Игра заканчивается, когда у игрока не остается больше ходов.</p>
          <h3>Ход игры</h3>
          <p>Игра идет в два этапа:</p>
          <ol>
            <li>
              <h4>A. Ознакомление и исследование игровой ситуации</h4>
              <h5>A.1. Описание модели, представляющей ситуации</h5>
              <p>Игрок знакомится с ситуацией, отображающей реальную ситуацию мира.</p>
              <p>Представление ситуации:</p>
              <ol>
                <li>Модель ситуации предоставляется в виде направленного знакового взвешенного графа с детерминированной причинностью на дугах.</li>
                <li>Узлы графа имеют номер и название и представляют собой институциональные сложные факторы реальной системы.</li>
                <li>Дуги графа (стрелки) выражают каузальную связь между узлами графа и имеют вес от (-1) до (+1).</li>
                <li>Визуализировать целевой узел, то есть узел графа, который должен получить максимальную реакцию при воздействии на другие узлы модели. Целевой узел окрашен красным цветом.</li>
                <li>Визуализировать узлы, на которые запрещено прямое воздействие. Узлы, на которые воздействие запрещено, окрашены серым цветом.</li>
              </ol>
              <p><strong>Пример:</strong> Модель «Преступление и наказание»</p>
              <ol>
                <li>Модель «Преступление и наказание» описывает ситуацию с регулированием воровства в обществе.</li>
                <li>Модель имеет 7 узлов:</li>
                <ol type="a">
                  <li>Наличие имущества.</li>
                  <li>Возможность.</li>
                  <li>Воровство.</li>
                  <li>Участие общественности.</li>
                  <li>Преступный умысел.</li>
                  <li>Наказание.</li>
                  <li>Присутствие полиции.</li>
                </ol>
                <li>Узлы графа соединены дугами (стрелками), имеющими вес.</li>
                <li>Целевой узел в данной модели – узел «Воровство».</li>
              </ol>
              <h5>A.2. Действия при ознакомлении с моделью ситуации</h5>
              <p>Игрок может:</p>
              <ul>
                <li>Представить ситуацию. Понять значимость институциональных узлов (факторов) и причинно-следственных связей между ними.</li>
                <li>Идентифицировать целевой узел.</li>
                <li>Идентифицировать пути путем подсвечивания.</li>
              </ul>
              <p>Время ознакомления с ситуацией не нормируется.</p>
            </li>
          </ol>
          <button onClick={handleNextPage}>Next</button>
        </div>
      )}

      {currentPage === 2 && (
        <div>
          <h3>Воздействие на ситуацию</h3>
          <p>Вам, как стратегу и влиятельному человеку, поручено разобраться в тонкостях институционального комплекса.</p>
          <p>Вы можете воздействовать на ситуацию, прилагая воздействия к узлам графа с целью достигнуть максимальной реакции модели.</p>
          <p>Стратегия воздействия – это последовательность из узлов, выбранных Вами для воздействия на систему.</p>
          <p>Максимальная реакция модели – это достижение максимально возможной реакции модели с ориентацией на целевой узел.</p>
          <p>Максимально возможная (оптимальная) реакция модели рассчитывается алгоритмом игры с помощью специального математического инструментария, расположенного по адресу <a href="https://github.com/Simon1093/cognition/">https://github.com/Simon1093/cognition/</a>.</p>
          <h4>Правила игры</h4>
          <ol>
            <li>Ход игрока – это выбор последовательности из узлов, на которые будет осуществляться воздействие за один ход.</li>
            <li>За один ход разрешается воздействовать не менее, чем на 3 узла.</li>
            <li>Вы можете выбрать больше, чем 3 узла за один ход.</li>
            <li>Выбранная последовательность узлов за один ход предполагает ранжирование узлов по их силе воздействия от высшего к низшему.</li>
          </ol>
          <h4>Подсчет очков</h4>
          <ol>
            <li>За каждый ход вы получаете очки по 100-балльной шкале.</li>
            <li>Баллы начисляются по каждому узлу и затем суммируются.</li>
          </ol>
          <p>Игра заканчивается сразу после последнего возможного хода.</p>
          <button onClick={handlePrevPage}>Prev</button>
          <button onClick={handleNextPage}>Next</button>
        </div>
      )}

      {currentPage === 3 && (
        <div>
          <h3>Правила игры и подсчет очков</h3>
          <h4>Правила игры</h4>
          <ol>
            <li>Ход игрока – это выбор последовательности из узлов, на которые будет осуществляться воздействие за один ход.</li>
            <li>За один ход разрешается воздействовать не менее, чем на 3 узла.</li>
            <li>Вы можете выбрать больше, чем 3 узла за один ход.</li>
            <li>Выбранная последовательность узлов за один ход предполагает ранжирование узлов по их силе воздействия от высшего к низшему.</li>
          </ol>
          <h4>Подсчет очков</h4>
          <ol>
            <li>За каждый ход вы получаете очки по 100-балльной шкале.</li>
            <li>Баллы начисляются по каждому узлу и затем суммируются.</li>
          </ol>
          <p>Игра заканчивается сразу после последнего возможного хода.</p>
          <button onClick={handlePrevPage}>Prev</button>
          <button onClick={handleNextPage}>Next</button>
        </div>
      )}

      {currentPage === 4 && (
        <div>
          <h3>Конец игры</h3>
          <p>Игра заканчивается, когда у игрока не остается больше ходов.</p>
          <p>В этом модельном случае игрок заканчивает свои действия сразу после последнего возможного хода.</p>
          <p>Игра заканчивается, когда у игрока нет больше возможных ходов.</p>
          <p>Это означает, что стратегия действий завершается, когда нет больше возможных ходов. Важно исключить возможность совершения еще одного действия, так как целевой узел игрока имеет крайнее положение в конце второго этапа игры.</p>
          <button onClick={handlePrevPage}>Prev</button>
        </div>
      )}
    </div>
  );
}

export default GameInfo;
